from Crypto.Util.number import *
from flag import flag
import random
from gmpy2 import *

'''
正整数a,b满足条件：
b/a+a/b-1/(a*b) 也是一个正整数（注意这里的'/'是有理数域的除法而非整除）
显然，满足这样的(a,b)有很多对，为方便起见,设(a,b)=(b,a)，我们限制上面表达式的值<=1000且值为k的数对个数不超过k(选取值最小的k对)，并且定义数对(a,b)的大小判定法则：
对于数对(a,b),(c,d),如果a+b>c+d，则(a,b)>(c,d);如果a+b<c+d,则(a,b)<(c,d);如果a+b=c+d,则(a,b)=(c,d).
对于所有满足条件的(a,b),设c=a+b,将所有的c按从小到大的顺序进行排序(允许有重复）,设C_n为第n个元素/（从C_0开始）
'''

def get_hint():
    '''
    solve it and you can get my hint!
    '''
    substraction=822984976657376685715418076561422757597620459240629620805069739625809084074911396901289837663169839386183697208437927104495125132420472665886473237204637560096196854291692206839524711049060347980804935646000773519421947881068355938382187726351692526586848672641370096417622803018503999703696424669854399605203109655870518848888402480873763536942648304938213946875577347410273682872702813627968402619870998840108213558076590420289886205160526659213101450525054986412271625490881065476414331534900680354420607443485677667350609365580557892426418927384993
    hint=(C_321123)//(520**100*5201314**47)-substraction   #C_321123代表第321123项
    hint//=(520*5201314)
    return hint

n=28878766272191403823107889041058284169199808521158371682733066050244662799263367156309550269227101325669736027371771826809397253158613924644548712934884421417378014208087639969044807981377186737714340829286082351379351558923920227008127429160092666852532458086422142081205116705084311913772665687970343016885031103707028461199015059765479532800549778386359788105205971343282912784946850071662422979298574392484710573074515486971587923766953069962751794200877653014694387953177200024644885244403712103579400266188539111892932620741206480403759438884693193946568495787340335563344856666827548302085113710892285188352347515140126494219804766912500865837631112541745039505278461897206316347941630953618889264594051661709309130123886362948041284745802718880863003173754215754620092571809982610688745771085197335609922355484722672895954924759
e
m=bytes_to_long(flag)

def gen_z():
    z=INF   #INF指∞
    while z>2*n:
        z=random.randint(100,2*n)
    return z

z=gen_z()
e*d mod phi =z
assert gcd(e,phi)==1
c=pow(m,e,n)
print("c=%d"%c)
'''
output:c=24477056246472958877582650947519382866252667038608131797874360373511711316929412448610154966593717161376340344881057985794058724348910641074554853437906392076777197795659738035210696419588302580076529229812715214350557398867463892510224106131491152957309482926964658698037977127953232555422652927515396867358810218347942136185725039218681300121218610748030312812059716923109801144589263168324769368213361855456037977443282325101332847243649383162374902646133538063053828437211669978046374474176647377400172662199067920120952566589553211031301778628289060621420000171834901773356071341869568546157666909021128388530397465458000823484368898469991056488182252144869653629046984517267738480059843625533654186323127302242963644384873827372138681459895495128469655610050997334266518521243137469058484772188522647581435038163465517566029740808
'''
